/*class Solution {
    public int findDuplicate(int[] nums) {
        int slow = nums[0];
        int fast = nums[nums[0]];
        
        while (slow != fast) {
            slow = nums[slow];
            fast = nums[nums[fast]];
        }
        
        fast = 0;
        while (slow != fast) {
            slow = nums[slow];
            fast = nums[fast];
        }
        
        return slow;
    }
}*/
class Solution {
    public int findDuplicate(int[] nums) {
        
        
        int n = nums.length;
        
        for (int i = 0;  i < nums.length; i++) {
            
            nums[nums[i] % n] = n + nums[nums[i] % n];
        }
        
        for (int i = 0; i < nums.length; i++) {
            
            if (nums[i] > 2 * n) return i;
        }
        
        return -1;
        
    }
}
