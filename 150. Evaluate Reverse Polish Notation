import java.util.Stack;

class Solution {
    public int evalRPN(String[] tokens) {
        int n = tokens.length;
        Stack<Integer> ans = new Stack<>();

        for (int i = 0; i < n; i++) {
            if (tokens[i].equals("+")) {
                int temp1 = ans.pop();
                int temp2 = ans.pop();
                ans.push(temp2 + temp1);
            } else if (tokens[i].equals("-")) {
                int temp1 = ans.pop();
                int temp2 = ans.pop();
                ans.push(temp2 - temp1);
            } else if (tokens[i].equals("*")) {
                int temp1 = ans.pop();
                int temp2 = ans.pop();
                ans.push(temp2 * temp1);
            } else if (tokens[i].equals("/")) {
                int temp1 = ans.pop();
                int temp2 = ans.pop();
                ans.push(temp2 / temp1);
            } else {
                int temp = Integer.parseInt(tokens[i]);
                ans.push(temp);
            }
        }

        return ans.pop();
    }
}
